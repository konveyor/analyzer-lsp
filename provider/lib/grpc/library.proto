syntax = "proto3";

import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/konveyor/analyzer-lsp/provider/lib/grpc";


package provider;


message Capability {
  string name = 1;
  google.protobuf.Struct templateContext = 2;
}

message Config {
  string name = 1;
  string location = 2;
  string dependencyPath = 3;
  string binaryLocation = 4;
  google.protobuf.Struct providerSpecificConfig= 5;
}

message ExternalLink {
  string url = 1;
  string title = 2;
}

message Position {
  double line = 1;
  double character = 2;
}

message Location {
  Position startPosition = 1;
  Position endPosition = 2;
}

message IncidentContext {
  string fileURI = 1;
  optional int64 Effort = 2;
  Location codeLocation = 3;
  google.protobuf.Struct variables = 5;
  repeated ExternalLink links = 4;
}

message ProviderEvaluateResponse {
  bool matched = 1;
  repeated IncidentContext incidentContexts = 2;
  google.protobuf.Struct templateContext = 3;
}

message HasCapabilityRequest {
  string capability = 1;
}

message HasCapabilityResponse {
  bool hasCap = 1;
}

message BasicResponse {
  string error = 1 ;
  bool successful = 2;
}

message EvaluateRequest {
  string cap = 1;
  string conditionInfo = 2;
}

message EvaluateResponse {
  string error = 1;
  bool successful = 2;
  ProviderEvaluateResponse response = 3;
}

message CapabilitiesResponse {
  repeated Capability capabilities = 1;
}

service ProviderService {
  rpc Capabilities (google.protobuf.Empty) returns (CapabilitiesResponse) {};
  rpc HasCapability (HasCapabilityRequest) returns (HasCapabilityResponse) {};
  rpc Init (google.protobuf.Empty) returns (BasicResponse) {};
  rpc Evaluate (EvaluateRequest) returns (EvaluateResponse) {};
  rpc Stop (google.protobuf.Empty) returns (google.protobuf.Empty) {};
}

