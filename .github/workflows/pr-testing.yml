name: Build and Test

on: ["push", "pull_request"]

jobs: 
  test:
    strategy:
      matrix:
        include:
        - runs_on: ubuntu-latest
          goos: linux
          goarch: amd64
        - runs_on: ubuntu-latest
          goos: linux
          goarch: arm64
        - runs_on: macos-latest
          goos: darwin
          goarch: amd64
        - runs_on: macos-latest
          goos: darwin
          goarch: arm64
        - runs_on: windows-latest
          goos: windows
          goarch: amd64
    runs-on: ${{ matrix.runs_on }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.23.9'

      - name: Test
        run: go test -v ./...

      - name: Build binaries
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: make build

      - name: Archive binaries (linux & mac)
        if: ${{ !startsWith(matrix.goos, 'windows') }}
        env:
          OS: ${{ matrix.goos }}
          OS_ARCH: ${{ matrix.goarch }}
        run: |
          zip -j analyzer-lsp-binaries.${{ env.OS }}-${{ env.OS_ARCH }}.zip build/*

      - name: Archive binaries (windows)
        if: ${{ startsWith(matrix.goos, 'windows') }}
        env:
          OS: ${{ matrix.goos }}
          OS_ARCH: ${{ matrix.goarch }}
        run: |
          Compress-Archive -Path build/* -DestinationPath analyzer-lsp-binaries.${{ env.OS }}-${{ env.OS_ARCH }}.zip

      - name: Upload binary archive
        uses: actions/upload-artifact@v4
        env:
          OS: ${{ matrix.goos }}
          OS_ARCH: ${{ matrix.goarch }}
        with:
          name: analyzer-lsp-binaries.${{ env.OS }}-${{ env.OS_ARCH }}.zip
          path: analyzer-lsp-binaries.${{ env.OS }}-${{ env.OS_ARCH }}.zip
          retention-days: 30

